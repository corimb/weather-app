{"version":3,"sources":["images/weather/sun.svg","images/weather/night.svg","images/weather/cloudy_day.svg","images/weather/cloudy_night.svg","images/weather/rainy_day.svg","images/weather/rain.svg","images/weather/storm.svg","images/weather/snowflake.svg","images/cold.svg","images/hot.svg","images/humidity.svg","images/meter.svg","services/api.js","components/Icons.js","components/App.js","index.js"],"names":["module","exports","getDataFromApi","location","lang","fetch","CONFIG","API_KEY","then","response","json","data","catch","error","console","log","isDay","sunrise","sunset","d","Date","now","Math","round","getTime","Icons","props","icon","iconId","src","storm","alt","rainyDay","rain","snow","cloudyDay","cloudyNight","sunyDay","sunyNight","App","useState","searchCity","setSearchCity","weatherData","setWeatherData","className","onSubmit","e","preventDefault","htmlFor","id","type","value","onChange","event","target","onClick","cod","weather","map","item","sys","description","floor","main","temp","feels_like","name","minIcon","temp_min","maxIcon","temp_max","humidityIcon","humidity","pressureIcon","pressure","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f46ae06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.d0e97358.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.17df37be.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_day.070b2c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_night.0a3ce6b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy_day.8330357b.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.7e1e68ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.2115184c.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.1396aa2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cold.fe0aefb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/hot.7e5e659b.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.7998765e.svg\";","module.exports = __webpack_public_path__ + \"static/media/meter.aa8ae84d.svg\";","import CONFIG from '../config.json';\n\nconst getDataFromApi = (location, lang) => {\n  return fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${CONFIG.API_KEY}&mode=json&units=metric&lang=${lang}`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    })\n    .catch(error => console.log(error));\n};\n\nexport default getDataFromApi;","import React from 'react';\n\nimport sunyDay from '../images/weather/sun.svg';\nimport sunyNight from '../images/weather/night.svg';\nimport cloudyDay from '../images/weather/cloudy_day.svg';\nimport cloudyNight from '../images/weather/cloudy_night.svg';\nimport rainyDay from '../images/weather/rainy_day.svg';\nimport rain from '../images/weather/rain.svg';\nimport storm from '../images/weather/storm.svg';\nimport snow from '../images/weather/snowflake.svg';\n\nconst Icons = (props) => {\n    let icon;\n    switch (true) {\n        case props.iconId >= 200 && props.iconId < 300:\n            icon = <img src={storm} alt=\"storm\"></img>;\n            break;\n        case props.iconId >= 300 && props.iconId < 400:\n            icon = <img src={rainyDay} alt=\"rainy day\"></img>;\n            break;\n        case props.iconId >= 500 && props.iconId < 600:\n            icon = <img src={rain} alt=\"rain\"></img>;\n            break;\n        case props.iconId >= 600 && props.iconId < 700:\n            icon = <img src={snow} alt=\"snow\"></img>;\n            break;\n        case props.iconId >= 801 && props.iconId <= 804:\n            icon = isDay(props.sunrise, props.sunset) ? <img src={cloudyDay} alt=\"cloudy day\"></img> : <img src={cloudyNight} alt=\"cloudy night\"></img>;\n            break;\n        case props.iconId === 800:\n            icon = isDay(props.sunrise, props.sunset) ? <img src={sunyDay} alt=\"suny day\"></img> : <img src={sunyNight} alt=\"suny night\"></img>;\n            break;\n        default:\n            icon = <img src={sunyDay} alt=\"sunyDay\"></img>;\n            break;\n    }\n    return icon;\n}\nconst isDay = (sunrise, sunset) => {\n    let d = new Date(),\n        now = Math.round(d.getTime() / 1000);\n    if (now >= sunrise && now <= sunset) {\n        return true;\n    }\n    return false;\n};\n\nexport default Icons\n","import React, { useState } from 'react';\nimport getDataFromApi from '../services/api';\n\nimport Icons from './Icons';\nimport minIcon from '../images/cold.svg';\nimport maxIcon from '../images/hot.svg';\nimport humidityIcon from '../images/humidity.svg';\nimport pressureIcon from '../images/meter.svg';\nimport '../style/App.scss';\n\nconst App = () => {\n  \n  const [searchCity, setSearchCity] = useState(\"\");\n  const searchCityValue = event => {setSearchCity(event.target.value)};\n\n  const [weatherData, setWeatherData] = useState(\"\");\n  console.log(weatherData)\n\n  function submit () {\n    getDataFromApi(searchCity, 'en').then(data => {setWeatherData(data)});\n  }\n\n  return (\n    <div className='App'>\n      <h1>Check the weather!</h1>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      className=\"form\">\n          <label htmlFor='search'>City</label>\n          <input id='search' type='text' value={searchCity} onChange={searchCityValue}></input>\n          <button className=\"btn\" type='submit' onClick={submit}>\n            Search\n          </button>\n      </form>\n      \n        {\n        weatherData.cod === 200 ? (\n          <>\n            <section className=\"top-container\">\n            <Icons \n            iconId={weatherData.weather.map(item => {return item.id})} \n            sunrise={weatherData.sys.sunrise} \n            sunset={weatherData.sys.sunset}/>\n              <article>\n                      <h3>{weatherData.weather.map(item =>{return item.description})}</h3>\n                      <h2>{Math.floor(weatherData.main.temp)}ºC</h2>\n                      <p>{Math.floor(weatherData.main.feels_like)}ºC feels like</p>\n                      <h4>{weatherData.name}</h4>\n              </article>\n            </section>\n            <section className=\"bottom-container\">\n                <article>\n                    <div><img src={minIcon} alt=\"min temp icon\"></img></div>\n                    <div>{Math.floor(weatherData.main.temp_min)}ºC</div>\n                </article>\n                <article>\n                    <div><img src={maxIcon} alt=\"max temp icon\"></img></div>\n                    <div>{Math.floor(weatherData.main.temp_max)}ºC</div>\n                </article>\n                <article>\n                    <div><img src={humidityIcon} alt=\"humidity icon\"></img></div>\n                    <div>{weatherData.main.humidity}%</div>\n                </article>\n                <article>\n                    <div><img src={pressureIcon} alt=\"pressure icon\"></img></div>\n                    <div>{weatherData.main.pressure}pHa</div>\n                </article>\n            </section>\n          </>\n          ) : null\n        }\n        {weatherData.cod === '404' ? (\n                <div className=\"not-found\">\n                    <h2>Ooops! Location not found</h2>\n                    <p>Make sure you have typed the name of the city correctly</p>\n                </div>\n            ) : null} \n    </div>   \n  );\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}